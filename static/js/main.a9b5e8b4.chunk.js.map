{"version":3,"sources":["reportWebVitals.js","components/SearchBox.js","components/Card.js","components/CardList.js","components/Scroll.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SearchBox","searchChange","className","type","placeholder","onChange","Card","props","name","email","id","alt","src","CardList","robots","map","user","Scroll","style","overflow","height","border","children","App","onSearchChange","event","setState","searchField","target","value","state","fetch","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,4BCQCQ,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAEhB,OACI,8BACI,uBAAOC,UAAU,mCACjBC,KAAK,SACLC,YAAY,gBACZC,SAAYJ,OCaTK,EApBF,SAACC,GAAW,IAEdC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,MAAOC,EAAMH,EAANG,GAEpB,OAII,sBAAKR,UAAU,sDAAf,UACI,qBAAKS,IAAI,SAASC,IAAG,+BAA0BF,EAA1B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCQLI,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACjB,OACK,8BAEQA,EAAOC,KAAI,SAAAC,GACP,OACI,cAAC,EAAD,CACCR,KAAQQ,EAAKR,KACbC,MAAQO,EAAKP,MACbC,GAAMM,EAAKN,IAHCM,EAAKN,UCC3BO,EARA,SAACV,GACZ,OACI,qBAAKW,MAAO,CAACC,SAAU,SAAUC,OAAQ,QAASC,OAAS,mBAA3D,SACKd,EAAMe,YC2CJC,G,wDAxCX,aAAc,IAAD,8BACT,gBAaJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACC,YAAcF,EAAMG,OAAOC,SAb1C,EAAKC,MAAQ,CACThB,OAAS,GACTa,YAAc,IAJT,E,gEAQO,IAAD,OACfI,MAAM,8CACHrC,MAAK,SAAAsC,GAAQ,OAAIA,EAASC,UACxBvC,MAAK,SAAAwC,GAAK,OAAI,EAAKR,SAAS,CAACZ,OAAQoB,S,+BAOrC,IAAD,EAC4BC,KAAKL,MAA7BhB,EADJ,EACIA,OAAQa,EADZ,EACYA,YACVS,EAAiBtB,EAAOuB,QAAO,SAAAC,GACjC,OAAOA,EAAM9B,KAAK+B,cAAcC,SAASb,EAAYY,kBAGzD,OAAQzB,EAAO2B,OAGP,sBAAKvC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWD,aAAgBkC,KAAKX,iBAChC,cAAC,EAAD,UACI,cAAC,EAAD,CAAUV,OAAUsB,SANhC,6C,GA3BMM,c,MCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BxD,M","file":"static/js/main.a9b5e8b4.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n\r\n    return (\r\n        <div>\r\n            <input className=\"pa3 ba b--green bg-lightest-blue\" \r\n            type=\"search\" \r\n            placeholder=\"search robots\"\r\n            onChange = {searchChange} />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Card = (props) => {\r\n    \r\n    const {name, email, id} = props;\r\n\r\n    return (\r\n\r\n         \r\n\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img alt=\"robots\" src={`https://robohash.org/${id}?200*200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n   return (\r\n        <div>\r\n            {\r\n                robots.map(user => {\r\n                    return (\r\n                        <Card key = {user.id}\r\n                         name = {user.name} \r\n                         email ={user.email} \r\n                         id = {user.id}\r\n                         />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflow: 'scroll', height: '800px', border : '5px solid black'}}>\r\n            {props.children}    \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from \"react\";\r\nimport SearchBox from \"../components/SearchBox\"\r\nimport CardList from \"../components/CardList\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            robots : [],\r\n            searchField : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n          .then(response => response.json())\r\n            .then(users => this.setState({robots: users}));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchField : event.target.value});\r\n    }\r\n\r\n    render(){\r\n        const { robots, searchField } = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n        })\r\n\r\n        return !robots.length ?\r\n            <h1>Loading</h1> : \r\n            (\r\n                <div className=\"tc\">\r\n                    <h1 className=\"f1\">Robo Friends</h1>\r\n                    <SearchBox searchChange = {this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <CardList robots = {filteredRobots}/>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from  './containers/App'\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}